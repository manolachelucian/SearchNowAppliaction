<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>